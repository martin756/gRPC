syntax = "proto3";
import "usuarios.proto";

import "google/protobuf/timestamp.proto";


message Producto {
    int32 idproducto=1;
    string nombre = 2;
    string descripcion = 3;
    int32 idtipocategoria = 4;
    float precio = 5;
    int64 cantidad_disponible = 6;
    string fecha_publicacion = 7;
    int32 publicador_idusuario = 8;
    repeated string url_fotos = 9;
    bool esSubasta = 10;
    google.protobuf.Timestamp fecha_inicio = 11;
    google.protobuf.Timestamp fecha_fin = 12;
}

message ProductosList {
    repeated Producto productos = 1;
}

message ProductoGet {
    string nombre = 1;
    string descripcion = 2;
    string categoria = 3;
    float precio = 4;
    float precio_final = 5;
    int64 cantidad_disponible = 6;
    string fecha_publicacion = 7;
    string publicador = 8;
    repeated string url_fotos = 9;
    bool esSubasta = 10;
    google.protobuf.Timestamp fecha_ultima_puja = 11;
    google.protobuf.Timestamp fecha_inicio = 12;
    google.protobuf.Timestamp fecha_fin = 13;
    
}

message ProductoPost {
    string nombre = 1;
    string descripcion = 2;
    int64 idtipocategoria = 3;
    float precio = 4;
    int64 cantidad_disponible = 5;
    string fecha_publicacion = 6;
    int64 publicador_idusuario = 7;
    repeated string url_fotos = 8;
    bool esSubasta = 9;
    google.protobuf.Timestamp fecha_inicio = 10;
    google.protobuf.Timestamp fecha_fin = 11;
    
}

message ProductoPut {
    int32 idproducto = 1;
    string nombre = 2;
    string descripcion = 3;
    int64 idtipocategoria = 4;
    float precio = 5;
    int64 cantidad_disponible = 6;
    repeated string url_fotos = 7;
}

message Tipo_categoria{   
    string nombre = 1;
}

message IdProducto {
    int32 idproducto = 1;
}

message IdUsuario {
    int32 idusuario = 1;
}

message ProductoStock {
    int32 idProducto = 1;
    int32 cantidad = 2;
}

message UltimaPujaSubasta {
    int32 idPujador = 1;
    float precio_ofrecido = 2;
    int32 idProducto = 3;
}

service Productos {
    rpc TraerProductoById(IdProducto) returns (ProductoGet);
    rpc TraerProductos(Nulo) returns (stream Producto);
    rpc TraerSubastas(Nulo) returns (stream Producto);
    rpc AltaProducto(ProductoPost) returns (Response);
    rpc EditarProducto(ProductoPut) returns (Response);
    rpc ActualizarStock(ProductoStock) returns (Response);
    rpc pujarUltimaOferta(UltimaPujaSubasta) returns (Response);
}